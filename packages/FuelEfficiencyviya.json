{
  "creationTimeStamp": "2023-08-28T16:01:35.583Z",
  "modifiedTimeStamp": "2023-08-28T16:01:36.012Z",
  "createdBy": "student",
  "modifiedBy": "student",
  "links": [
    {
      "method": "GET",
      "rel": "self",
      "href": "/transfer/packages/8a7c5b98-6c9a-4fd9-9b86-4d0344a6edd5",
      "uri": "/transfer/packages/8a7c5b98-6c9a-4fd9-9b86-4d0344a6edd5",
      "type": "application/vnd.sas.transfer.package"
    },
    {
      "method": "GET",
      "rel": "alternate",
      "href": "/transfer/packages/8a7c5b98-6c9a-4fd9-9b86-4d0344a6edd5",
      "uri": "/transfer/packages/8a7c5b98-6c9a-4fd9-9b86-4d0344a6edd5",
      "type": "application/vnd.sas.transfer.package.summary"
    },
    {
      "method": "DELETE",
      "rel": "delete",
      "href": "/transfer/packages/8a7c5b98-6c9a-4fd9-9b86-4d0344a6edd5",
      "uri": "/transfer/packages/8a7c5b98-6c9a-4fd9-9b86-4d0344a6edd5"
    },
    {
      "method": "GET",
      "rel": "objects",
      "href": "/transfer/packages/8a7c5b98-6c9a-4fd9-9b86-4d0344a6edd5/objects",
      "uri": "/transfer/packages/8a7c5b98-6c9a-4fd9-9b86-4d0344a6edd5/objects",
      "type": "application/vnd.sas.collection"
    },
    {
      "method": "GET",
      "rel": "connectors",
      "href": "/transfer/packages/8a7c5b98-6c9a-4fd9-9b86-4d0344a6edd5/connectors",
      "uri": "/transfer/packages/8a7c5b98-6c9a-4fd9-9b86-4d0344a6edd5/connectors",
      "type": "application/vnd.sas.collection"
    },
    {
      "method": "GET",
      "rel": "mapping",
      "href": "/transfer/packages/8a7c5b98-6c9a-4fd9-9b86-4d0344a6edd5/mapping",
      "uri": "/transfer/packages/8a7c5b98-6c9a-4fd9-9b86-4d0344a6edd5/mapping",
      "type": "application/vnd.sas.transfer.import.mapping"
    }
  ],
  "version": 1,
  "id": "8a7c5b98-6c9a-4fd9-9b86-4d0344a6edd5",
  "name": "FuelEfficiencyviya",
  "description": "",
  "options": {
    "includeDependencies": "true",
    "includeRules": "true"
  },
  "requestedItems": [
    "/jobDefinitions/definitions/b4d3cd6e-186d-48ff-909d-53e351280dbb"
  ],
  "transferObjectCount": 2,
  "transferDetails": [
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/8a7c5b98-6c9a-4fd9-9b86-4d0344a6edd5/objects/3da76593-fa64-4767-a5c6-66130a6d6a7c",
            "uri": "/transfer/packages/8a7c5b98-6c9a-4fd9-9b86-4d0344a6edd5/objects/3da76593-fa64-4767-a5c6-66130a6d6a7c",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "3da76593-fa64-4767-a5c6-66130a6d6a7c",
        "summary": {
          "creationTimeStamp": "2023-08-28T06:19:13.615Z",
          "modifiedTimeStamp": "2023-08-28T06:29:47.637Z",
          "createdBy": "student",
          "modifiedBy": "student",
          "id": "b4d3cd6e-186d-48ff-909d-53e351280dbb",
          "type": "jobDefinition",
          "name": "Fuel Efficiency by Type and Origin",
          "description": "",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/jobDefinitions/definitions/b4d3cd6e-186d-48ff-909d-53e351280dbb",
              "uri": "/jobDefinitions/definitions/b4d3cd6e-186d-48ff-909d-53e351280dbb",
              "type": "application/vnd.sas.job.definition"
            }
          ],
          "version": 2
        },
        "content": "",
        "state": "enabled",
        "contentSourceLocation": "/VJOB",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": [
        {
          "id": "cc487700-450d-439f-92e7-40671d729287",
          "uri": "/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19",
          "relatedUris": [
            "/jobDefinitions/definitions/b4d3cd6e-186d-48ff-909d-53e351280dbb"
          ],
          "name": "VJOB",
          "contentType": "application/vnd.sas.content.folder+json",
          "type": "parentFolder",
          "hints": {},
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/transfer/packages/8a7c5b98-6c9a-4fd9-9b86-4d0344a6edd5/connectors/cc487700-450d-439f-92e7-40671d729287",
              "uri": "/transfer/packages/8a7c5b98-6c9a-4fd9-9b86-4d0344a6edd5/connectors/cc487700-450d-439f-92e7-40671d729287",
              "type": "application/vnd.sas.transfer.connector"
            }
          ],
          "forceMapping": false
        }
      ]
    },
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/8a7c5b98-6c9a-4fd9-9b86-4d0344a6edd5/objects/3c21f9b8-81eb-4533-979a-843a29b1a898",
            "uri": "/transfer/packages/8a7c5b98-6c9a-4fd9-9b86-4d0344a6edd5/objects/3c21f9b8-81eb-4533-979a-843a29b1a898",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "3c21f9b8-81eb-4533-979a-843a29b1a898",
        "summary": {
          "creationTimeStamp": "2023-08-25T17:03:50.592Z",
          "modifiedTimeStamp": "2023-08-25T17:03:50.592Z",
          "createdBy": "student",
          "modifiedBy": "student",
          "id": "c560489d-91b7-4b7c-9d07-26e71ccefd19",
          "type": "folder",
          "name": "VJOB",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19",
              "uri": "/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19",
              "type": "application/vnd.sas.content.folder"
            },
            {
              "method": "PUT",
              "rel": "update",
              "href": "/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19",
              "uri": "/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19",
              "type": "application/vnd.sas.content.folder",
              "responseType": "application/vnd.sas.content.folder"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19",
              "uri": "/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19"
            },
            {
              "method": "DELETE",
              "rel": "deleteRecursively",
              "href": "/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19?recursive=true",
              "uri": "/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19?recursive=true"
            },
            {
              "method": "GET",
              "rel": "members",
              "href": "/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19/members",
              "uri": "/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19/members",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.content.folder"
            },
            {
              "method": "POST",
              "rel": "addMember",
              "href": "/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19/members",
              "uri": "/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19/members",
              "type": "application/vnd.sas.content.folder.member",
              "responseType": "application/vnd.sas.content.folder.member"
            },
            {
              "method": "GET",
              "rel": "ancestors",
              "href": "/folders/ancestors?childUri=/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19",
              "uri": "/folders/ancestors?childUri=/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19",
              "type": "application/vnd.sas.content.folder.ancestor"
            },
            {
              "method": "POST",
              "rel": "createChild",
              "href": "/folders/folders?parentFolderUri=/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19",
              "uri": "/folders/folders?parentFolderUri=/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19",
              "type": "application/vnd.sas.content.folder"
            },
            {
              "method": "PUT",
              "rel": "validateRename",
              "href": "/folders/commons/validations/folders/@root/members/@new/name?value={newname}&type=folder",
              "uri": "/folders/commons/validations/folders/@root/members/@new/name?value={newname}&type=folder",
              "type": "application/vnd.sas.validation"
            },
            {
              "method": "PUT",
              "rel": "validateNewMemberName",
              "href": "/folders/commons/validations/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19/members/@new/name?value={newname}&type={newtype}",
              "uri": "/folders/commons/validations/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19/members/@new/name?value={newname}&type={newtype}",
              "type": "application/vnd.sas.validation"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19",
              "uri": "/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19",
              "uri": "/folders/folders/c560489d-91b7-4b7c-9d07-26e71ccefd19",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            },
            {
              "method": "POST",
              "rel": "transferImport",
              "href": "/folders/folders",
              "uri": "/folders/folders",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "eyJmb2xkZXIiOnsiY3JlYXRpb25UaW1lU3RhbXAiOiIyMDIzLTA4LTI1VDE3OjAzOjUwLjU5MjcyWiIsImNyZWF0ZWRCeSI6InN0dWRlbnQiLCJtb2RpZmllZFRpbWVTdGFtcCI6IjIwMjMtMDgtMjVUMTc6MDM6NTAuNTkyNzIxWiIsIm1vZGlmaWVkQnkiOiJzdHVkZW50IiwidmVyc2lvbiI6MSwiaWQiOiJjNTYwNDg5ZC05MWI3LTRiN2MtOWQwNy0yNmU3MWNjZWZkMTkiLCJuYW1lIjoiVkpPQiIsInR5cGUiOiJmb2xkZXIiLCJtZW1iZXJDb3VudCI6NywibGlua3MiOlt7Im1ldGhvZCI6IkdFVCIsInJlbCI6InNlbGYiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy9jNTYwNDg5ZC05MWI3LTRiN2MtOWQwNy0yNmU3MWNjZWZkMTkiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzL2M1NjA0ODlkLTkxYjctNGI3Yy05ZDA3LTI2ZTcxY2NlZmQxOSIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbnRlbnQuZm9sZGVyIn0seyJtZXRob2QiOiJQVVQiLCJyZWwiOiJ1cGRhdGUiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy9jNTYwNDg5ZC05MWI3LTRiN2MtOWQwNy0yNmU3MWNjZWZkMTkiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzL2M1NjA0ODlkLTkxYjctNGI3Yy05ZDA3LTI2ZTcxY2NlZmQxOSIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbnRlbnQuZm9sZGVyIiwicmVzcG9uc2VUeXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5jb250ZW50LmZvbGRlciJ9LHsibWV0aG9kIjoiREVMRVRFIiwicmVsIjoiZGVsZXRlIiwiaHJlZiI6Ii9mb2xkZXJzL2ZvbGRlcnMvYzU2MDQ4OWQtOTFiNy00YjdjLTlkMDctMjZlNzFjY2VmZDE5IiwidXJpIjoiL2ZvbGRlcnMvZm9sZGVycy9jNTYwNDg5ZC05MWI3LTRiN2MtOWQwNy0yNmU3MWNjZWZkMTkifSx7Im1ldGhvZCI6IkRFTEVURSIsInJlbCI6ImRlbGV0ZVJlY3Vyc2l2ZWx5IiwiaHJlZiI6Ii9mb2xkZXJzL2ZvbGRlcnMvYzU2MDQ4OWQtOTFiNy00YjdjLTlkMDctMjZlNzFjY2VmZDE5P3JlY3Vyc2l2ZT10cnVlIiwidXJpIjoiL2ZvbGRlcnMvZm9sZGVycy9jNTYwNDg5ZC05MWI3LTRiN2MtOWQwNy0yNmU3MWNjZWZkMTk/cmVjdXJzaXZlPXRydWUifSx7Im1ldGhvZCI6IkdFVCIsInJlbCI6Im1lbWJlcnMiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy9jNTYwNDg5ZC05MWI3LTRiN2MtOWQwNy0yNmU3MWNjZWZkMTkvbWVtYmVycyIsInVyaSI6Ii9mb2xkZXJzL2ZvbGRlcnMvYzU2MDQ4OWQtOTFiNy00YjdjLTlkMDctMjZlNzFjY2VmZDE5L21lbWJlcnMiLCJ0eXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5jb2xsZWN0aW9uIiwiaXRlbVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbnRlbnQuZm9sZGVyIn0seyJtZXRob2QiOiJQT1NUIiwicmVsIjoiYWRkTWVtYmVyIiwiaHJlZiI6Ii9mb2xkZXJzL2ZvbGRlcnMvYzU2MDQ4OWQtOTFiNy00YjdjLTlkMDctMjZlNzFjY2VmZDE5L21lbWJlcnMiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzL2M1NjA0ODlkLTkxYjctNGI3Yy05ZDA3LTI2ZTcxY2NlZmQxOS9tZW1iZXJzIiwidHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMuY29udGVudC5mb2xkZXIubWVtYmVyIiwicmVzcG9uc2VUeXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5jb250ZW50LmZvbGRlci5tZW1iZXIifSx7Im1ldGhvZCI6IkdFVCIsInJlbCI6ImFuY2VzdG9ycyIsImhyZWYiOiIvZm9sZGVycy9hbmNlc3RvcnM/Y2hpbGRVcmk9L2ZvbGRlcnMvZm9sZGVycy9jNTYwNDg5ZC05MWI3LTRiN2MtOWQwNy0yNmU3MWNjZWZkMTkiLCJ1cmkiOiIvZm9sZGVycy9hbmNlc3RvcnM/Y2hpbGRVcmk9L2ZvbGRlcnMvZm9sZGVycy9jNTYwNDg5ZC05MWI3LTRiN2MtOWQwNy0yNmU3MWNjZWZkMTkiLCJ0eXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5jb250ZW50LmZvbGRlci5hbmNlc3RvciJ9LHsibWV0aG9kIjoiUE9TVCIsInJlbCI6ImNyZWF0ZUNoaWxkIiwiaHJlZiI6Ii9mb2xkZXJzL2ZvbGRlcnM/cGFyZW50Rm9sZGVyVXJpPS9mb2xkZXJzL2ZvbGRlcnMvYzU2MDQ4OWQtOTFiNy00YjdjLTlkMDctMjZlNzFjY2VmZDE5IiwidXJpIjoiL2ZvbGRlcnMvZm9sZGVycz9wYXJlbnRGb2xkZXJVcmk9L2ZvbGRlcnMvZm9sZGVycy9jNTYwNDg5ZC05MWI3LTRiN2MtOWQwNy0yNmU3MWNjZWZkMTkiLCJ0eXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5jb250ZW50LmZvbGRlciJ9LHsibWV0aG9kIjoiUFVUIiwicmVsIjoidmFsaWRhdGVSZW5hbWUiLCJocmVmIjoiL2ZvbGRlcnMvY29tbW9ucy92YWxpZGF0aW9ucy9mb2xkZXJzL0Byb290L21lbWJlcnMvQG5ldy9uYW1lP3ZhbHVlPXtuZXduYW1lfVx1MDAyNnR5cGU9Zm9sZGVyIiwidXJpIjoiL2ZvbGRlcnMvY29tbW9ucy92YWxpZGF0aW9ucy9mb2xkZXJzL0Byb290L21lbWJlcnMvQG5ldy9uYW1lP3ZhbHVlPXtuZXduYW1lfVx1MDAyNnR5cGU9Zm9sZGVyIiwidHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMudmFsaWRhdGlvbiJ9LHsibWV0aG9kIjoiUFVUIiwicmVsIjoidmFsaWRhdGVOZXdNZW1iZXJOYW1lIiwiaHJlZiI6Ii9mb2xkZXJzL2NvbW1vbnMvdmFsaWRhdGlvbnMvZm9sZGVycy9jNTYwNDg5ZC05MWI3LTRiN2MtOWQwNy0yNmU3MWNjZWZkMTkvbWVtYmVycy9AbmV3L25hbWU/dmFsdWU9e25ld25hbWV9XHUwMDI2dHlwZT17bmV3dHlwZX0iLCJ1cmkiOiIvZm9sZGVycy9jb21tb25zL3ZhbGlkYXRpb25zL2ZvbGRlcnMvYzU2MDQ4OWQtOTFiNy00YjdjLTlkMDctMjZlNzFjY2VmZDE5L21lbWJlcnMvQG5ldy9uYW1lP3ZhbHVlPXtuZXduYW1lfVx1MDAyNnR5cGU9e25ld3R5cGV9IiwidHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMudmFsaWRhdGlvbiJ9LHsibWV0aG9kIjoiR0VUIiwicmVsIjoidHJhbnNmZXJFeHBvcnQiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy9jNTYwNDg5ZC05MWI3LTRiN2MtOWQwNy0yNmU3MWNjZWZkMTkiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzL2M1NjA0ODlkLTkxYjctNGI3Yy05ZDA3LTI2ZTcxY2NlZmQxOSIsInJlc3BvbnNlVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMudHJhbnNmZXIub2JqZWN0In0seyJtZXRob2QiOiJQVVQiLCJyZWwiOiJ0cmFuc2ZlckltcG9ydFVwZGF0ZSIsImhyZWYiOiIvZm9sZGVycy9mb2xkZXJzL2M1NjA0ODlkLTkxYjctNGI3Yy05ZDA3LTI2ZTcxY2NlZmQxOSIsInVyaSI6Ii9mb2xkZXJzL2ZvbGRlcnMvYzU2MDQ4OWQtOTFiNy00YjdjLTlkMDctMjZlNzFjY2VmZDE5IiwidHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMudHJhbnNmZXIub2JqZWN0IiwicmVzcG9uc2VUeXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5zdW1tYXJ5In0seyJtZXRob2QiOiJQT1NUIiwicmVsIjoidHJhbnNmZXJJbXBvcnQiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycyIsInVyaSI6Ii9mb2xkZXJzL2ZvbGRlcnMiLCJ0eXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy50cmFuc2Zlci5vYmplY3QiLCJyZXNwb25zZVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLnN1bW1hcnkifV19fQ==",
        "state": "enabled",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": []
    }
  ]
}